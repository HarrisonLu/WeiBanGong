<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.springapp.mvc.contacts.dao"/>
    <context:component-scan base-package="com.springapp.mvc.contacts.service"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- LocalDataSource -->
    <bean id="localDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${local.jdbc.driverClassName}"/>
        <property name="url" value="${local.jdbc.url}"/>
        <property name="username" value="${local.jdbc.username}"/>
        <property name="password" value="${local.jdbc.password}"/>
    </bean>

    <!-- ServerDataSource -->
    <bean id="serverDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${server.jdbc.driverClassName}"/>
        <property name="url" value="${server.jdbc.url}"/>
        <property name="username" value="${server.jdbc.username}"/>
        <property name="password" value="${server.jdbc.password}"/>
    </bean>

    <!-- SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="localDataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>
    </bean>

    <!-- Configure TransactionManager to support Annotation based Transaction support. -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="localDataSource"/>
    </bean>

    <!-- Configure SqlSessionTemplate which provides ThreadSafe SqlSession object. -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- To be able to inject Mappers directly we should register org.mybatis.spring.mapper.MapperScannerConfigurer
    and configure the package name where to find Mapper Interfaces. -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.springapp.mvc.contacts.dao"/>
    </bean>

</beans>