<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springapp.mvc.dao.contacts.UserMapper">

    <resultMap id="UserResultMap" type="User">
        <id property="id" column="id"/>
        <result property="password" column="password"/>
        <result property="chineseName" column="chinese_name"/>
        <result property="chineseNamePinyin" column="chinese_name_pinyin"/>
        <result property="englishName" column="english_name"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="position" column="position"/>
        <result property="positionLevel" column="position_level"/>
        <result property="wechatNum" column="wechat_num"/>
        <result property="qqNum" column="qq_num"/>
        <result property="telephoneNum" column="telephone_num"/>
        <result property="mobilePhoneNum" column="mobile_phone_num"/>
        <result property="companyId" column="company_id"/>
        <collection property="departmentList" ofType="Department">
            <id property="id" column="departmentId"/>
            <result property="name" column="departmentName"/>
        </collection>
        <collection property="groupList" ofType="Group">
            <id property="id" column="groupId"/>
            <result property="name" column="groupName"/>
            <result property="departmentName" column="departmentNameOfGroup"/>
        </collection>
    </resultMap>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_user (id, password, chinese_name, chinese_name_pinyin,english_name, email, status,
                            position, position_level, wechat_num, qq_num, telephone_num,
                            mobile_phone_num, company_id)
                     values(#{id}, #{password}, #{chineseName}, #{chineseNamePinyin}, #{englishName}, #{email}, #{status},
                            #{position}, #{positionLevel}, #{wechatNum}, #{qqNum}, #{telephoneNum},
                            #{mobilePhoneNum}, #{companyId})
    </insert>

    <update id="updateUserInfo" parameterType="User">
        update t_user
        set  password = #{password},
             email = #{email},
             qq_num = #{qqNum},
             telephone_num = #{telephoneNum},
             mobile_phone_num = #{mobilePhoneNum},
             wechat_num = #{wechatNum}
        where id = #{id}
    </update>

    <select id="selectUserBaseInfoById" parameterType="int" resultMap="UserResultMap">
        select u.id, u.chinese_name, u.english_name,
                d.id as departmentId, d.name as departmentName,
                g.id as groupId, g.name as groupName, d_of_g.name as departmentNameOfGroup
        from t_user u
              left join t_user_department ud on u.id = ud.user_id
              left join t_department d on ud.department_id = d.id
              left join t_user_group ug on u.id = ug.user_id
              left join t_group g on ug.group_id = g.id
              left join t_department d_of_g on g.department_id = d_of_g.id
        where u.id = #{userId}
    </select>

    <select id="selectUserDetailsById" parameterType="int" resultMap="UserResultMap">
        select u.*,
                d.id as departmentId, d.name as departmentName,
                g.id as groupId, g.name as groupName, d_of_g.name as departmentNameOfGroup
        from t_user u
              left join t_user_department ud on u.id = ud.user_id
              left join t_department d on ud.department_id = d.id
              left join t_user_group ug on u.id = ug.user_id
              left join t_group g on ug.group_id = g.id
              left join t_department d_of_g on g.department_id = d_of_g.id
        where u.id = #{userId}
    </select>

    <select id="fuzzySelectUserBaseInfoListByString" parameterType="java.util.Map" resultMap="UserResultMap">
        select u.id, u.chinese_name, u.english_name,
                d.id as departmentId, d.name as departmentName,
                g.id as groupId, g.name as groupName, d_of_g.name as departmentNameOfGroup
        from t_company c
              left join t_user u on c.id = u.company_id and u.company_id = #{companyId}
              left join t_user_department ud on u.id = ud.user_id
              left join t_department d on ud.department_id = d.id
              left join t_user_group ug on u.id = ug.user_id
              left join t_group g on ug.group_id = g.id
              left join t_department d_of_g on g.department_id = d_of_g.id
        where english_name like "%"#{str}"%"
               or chinese_name_pinyin like "%"#{str}"%"
               or chinese_name like "%"#{str}"%" ;
    </select>

    <select id="isCollectedContacts" parameterType="java.util.Map" resultType="java.lang.Boolean">
            select count(*)
            from t_user_collectedcontacts
            where user_id = #{user_id} And collectedcontacts_id = #{collectedcontacts_id}
    </select>

    <select id="selectProjectManagerListByProjectId" parameterType="java.util.Map" resultMap="UserResultMap">
        select u.id, u.chinese_name, u.english_name
        from t_company c
        left join t_user u on c.id = u.company_id and u.company_id = #{companyId}
        left join t_project_manager p_ma on p_ma.manager_id = u.id
        where p_ma.project_id = #{projectId}
    </select>

    <select id="selectModuleManagerListByModuleId" parameterType="java.util.Map" resultMap="UserResultMap">
        select u.id, u.chinese_name, u.english_name
        from t_company c
        left join t_user u on c.id = u.company_id and u.company_id = #{companyId}
        left join t_module_manager m_ma on m_ma.manager_id = u.id
        where m_ma.module_id = #{moduleId}
    </select>

    <select id="selectTaskManagerListByTaskId" parameterType="int" resultMap="UserResultMap">
        select u.id, u.chinese_name, u.english_name
        from t_company c
        left join t_user u on c.id = u.company_id and u.company_id = #{companyId}
        left join t_task_manager t_ma on t_ma.manager_id = u.id
        where t_ma.task_id = #{taskId}
    </select>

    <select id="hasAccountWithUser" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_user u
        where u.email = #{accountNum} and u.password = #{password}
    </select>

    <select id="selectUserDetailByAccountNumAndPassword" parameterType="java.util.Map" resultMap="UserResultMap">
        select u.*
        from t_user u
        where u.email = #{accountNum} and u.password = #{password}
    </select>

    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from t_user
        where id = #{id}
    </delete>

    <!--<update id="updateUser" parameterType="User">-->
        <!--update t_user set-->
        <!--email = #{email},-->
        <!--password = #{password},-->
        <!--chinese_name = #{chineseName},-->
        <!--english_name = #{englishName},-->
        <!--position_title = #{positionTitle},-->
        <!--wechat_num = #{weChatNum},-->
        <!--qq_num = #{qqNum},-->
        <!--phone_num = #{phoneNum}-->
        <!--where-->
        <!--id = #{id}-->
    <!--</update>-->

    <!--<select id="selectUserByName" parameterType="User" resultMap="User">-->
        <!--select u.id,u.email,u.chinese_name,u.english_name,u.wechat_num,u.qq_num,u.phone_num,-->
        <!--d.id as dp_id,d.name as dp_name-->
        <!--from t_user u-->
        <!--left outer join t_user_department ud on u.id=ud.user_id-->
        <!--left outer join t_department d on ud.department_id=d.id-->
        <!--<where>-->
            <!--<if test="chineseName != 0">u.chinese_name=#{chineseName}</if>-->
            <!--<if test="englishName != 0">u.english_name=#{englishName}</if>-->
        <!--</where>-->
    <!--</select>-->


    <!--<select id="selectFrequentContactsIdByUserId" parameterType="int" resultType="Integer">-->
        <!--select frequentcontacts_id from t_user_frequentcontacts where user_id = #{userId}-->
    <!--</select>-->

    <!--<select id="selectAllUser" resultMap="User">-->
        <!--select u.id,u.email,u.chinese_name,u.english_name,d.name as dp_name-->
        <!--from t_user u-->
        <!--left outer join t_user_department ud on u.id=ud.user_id-->
        <!--left outer join t_department d on ud.department_id=d.id-->
    <!--</select>-->

</mapper>

