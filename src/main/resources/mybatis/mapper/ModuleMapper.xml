<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springapp.mvc.dao.project.ModuleMapper">
    <resultMap id="ModuleResultMap" type="Module">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="projectId" column="project_id"/>
        <result property="projectName" column="project_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createrId" column="creater_id"/>
        <result property="createrChineseName" column="creater_chinese_name"/>
        <result property="createrEnglishName" column="creater_english_name"/>
        <result property="companyId" column="company_id"/>
    </resultMap>

    <select id="selectModuleDetailsByModuleId" parameterType="int" resultMap="ModuleResultMap">
        select m.*,
               p.id as project_id, p.name as project_name,
               u.id as creater_id, u.chinese_name as creater_chinese_name, u.english_name as creater_english_name
        from t_module m
        left join t_project p on m.project_id = p.id
        left join t_user u on u.id = m.creater_id
        where m.id = #{moduleId}
    </select>

    <select id="selectModuleListByProjectId" parameterType="java.util.Map" resultMap="ModuleResultMap">
        select m.id, m.name, m.update_time
        from t_company c
        left join t_module m on c.id = m.company_id and m.company_id = #{companyId}
        where m.project_id = #{projectId}
    </select>

    <select id="getModuleListByUserIdAndProjectId" parameterType="java.util.Map" resultMap="ModuleResultMap">
--         select m.id, m.name, m.update_time
        select distinct m.*
        from t_company c
        left join t_module m on c.id = m.company_id and m.company_id = #{companyId}
--         from t_module m
        left join t_module_manager m_ma on m_ma.module_id = m.id
        left join t_module_member m_me on m_me.module_id = m.id

        left join t_task t on t.module_id = m.id
        left join t_task_manager t_ma on t_ma.task_id = t.id
        left join t_task t_1 on t_1.module_id = m.id
        left join t_task_member t_me on t_me.task_id = t_1.id

        where m.project_id = #{projectId}
              and (m.creater_id = #{userId} or m_ma.manager_id = #{userId} or m_me.member_id = #{userId} or
                  t.creater_id = #{userId} or t_ma.manager_id = #{userId} or t_me.member_id = #{userId})
--               order by m.create_time DESC
    </select>


    <insert id="insertModule" parameterType="Module" useGeneratedKeys="true" keyProperty="id">
        insert into t_module (name, project_id, creater_id, company_id)
                values (#{name}, #{projectId}, #{createrId}, #{companyId})
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id() as id
        </selectKey>
    </insert>

    <update id="updateModuleDetail" parameterType="Module">
        update t_module
        set name = #{name}
        where id = #{id}
    </update>

    <select id="isModuleCreater" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_module
        where id = #{moduleId} and creater_id = #{userId}
    </select>

    <delete id="deleteModuleDetailByModuleId" parameterType="int">
        delete from t_module
                where id = #{moduleId}
    </delete>
</mapper>