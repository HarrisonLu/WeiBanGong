<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springapp.mvc.dao.LinkMapper">

    <resultMap id="UserResultMap" type="User">
        <id property="id" column="id"/>
        <result property="password" column="password"/>
        <result property="chineseName" column="chinese_name"/>
        <result property="chineseNamePinyin" column="chinese_name_pinyin"/>
        <result property="englishName" column="english_name"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="position" column="position"/>
        <result property="positionLevel" column="position_level"/>
        <result property="wechatNum" column="wechat_num"/>
        <result property="qqNum" column="qq_num"/>
        <result property="telephoneNum" column="telephone_num"/>
        <result property="mobilePhoneNum" column="mobile_phone_num"/>
        <collection property="departmentList" ofType="Department">
            <id property="id" column="departmentId"/>
            <result property="name" column="departmentName"/>
        </collection>
        <collection property="groupList" ofType="Group">
            <id property="id" column="groupId"/>
            <result property="name" column="groupName"/>
            <result property="departmentName" column="departmentNameOfGroup"/>
        </collection>
    </resultMap>
    <resultMap id="ProjectResultMap" type="Project">
        <id property="id" column="id"/>
        <result property="name" column="project_name"/>
        <result property="createTime" column="project_create_time"/>
    </resultMap>
    <resultMap id="TaskResultMap" type="Task">
        <id property="id" column="id"/>
        <result property="name" column="task_name"/>
        <result property="projectName" column="project_name_of_task"/>
        <result property="createTime" column="task_create_time"/>
    </resultMap>
    <resultMap id="CommentCustomerResultMap" type="CommentCustomer">
        <id property="id" column="id"/>
        <result property="details" column="comment_details"/>
        <result property="time" column="comment_Time"/>
        <result property="userId" column="comment_user_id"/>
        <result property="userChineseName" column="comment_user_chinese_name"/>
        <result property="userEnglishName" column="comment_user_english_name"/>
        <result property="customerId" column="comment_customer_id"/>
    </resultMap>
    <insert id="insertUserIdCollectedContactsIdLink" parameterType="java.util.Map">
        insert into t_user_collectedcontacts values (#{user_id}, #{collectedcontacts_id})
    </insert>

    <delete id="deleteUserIdCollectedContactsIdLink" parameterType="java.util.Map">
        delete from t_user_collectedcontacts where user_id = #{user_id} and collectedcontacts_id = #{collectedcontacts_id}
    </delete>

    <select id="selectCollectedContactsBaseInfoListByUserId" parameterType="int" resultMap="UserResultMap">
        select collectedcontacts.id, collectedcontacts.chinese_name, collectedcontacts.english_name,
                d.id as departmentId, d.name as departmentName,
                g.id as groupId, g.name as groupName, d_of_g.name as departmentNameOfGroup
        from t_user collectedcontacts
              left join t_user_collectedcontacts uc on uc.collectedcontacts_id = collectedcontacts.id
              left join t_user u on u.id = uc.user_id
              left join t_user_department ud on collectedcontacts.id = ud.user_id
              left join t_department d on ud.department_id = d.id
              left join t_user_group ug on collectedcontacts.id = ug.user_id
              left join t_group g on ug.group_id = g.id
              left join t_department d_of_g on g.department_id = d_of_g.id
        where u.id = #{userId}
--         order by collectedcontacts.english_name
    </select>

    <select id="searchGroupUserBaseInfoListByUserId" parameterType="int" resultMap="UserResultMap">
        select group_u.id, group_u.chinese_name, group_u.english_name,
                g.id as groupId, g.name as groupName, d_of_g.name as departmentNameOfGroup
        from t_user group_u
            left join t_user_group ug_1 on ug_1.user_id = group_u.id
            left join t_user_group ug on ug.group_id = ug_1.group_id
            left join t_user u on u.id = ug.user_id

            left join t_user_group ug_2 on group_u.id = ug_2.user_id
            left join t_group g on ug_2.group_id = g.id
            left join t_department d_of_g on g.department_id = d_of_g.id
        where u.id = #{userId}
        order by group_u.english_name
    </select>

    <insert id="insertUserSharedCustomerLink" parameterType="java.util.Map">
        insert into t_customer_user
                values (#{customerId}, #{userId})
    </insert>

    <delete id="deleteUserSharedCustomerLink" parameterType="java.util.Map">
        delete from t_customer_user
                where customer_id = #{customerId} and user_id = #{userId}
    </delete>

    <insert id="insertProjectCustomerLink" parameterType="java.util.Map">
        insert into t_project_customer (project_id, customer_id)
                values (#{projectId}, #{customerId})
    </insert>

    <delete id="deleteProjectCustomerLink" parameterType="java.util.Map">
        delete from t_project_customer
                where project_id = #{projectId} and customer_id = #{customerId}
    </delete>

    <delete id="deleteAllProjectCustomerLinkByProjectId" parameterType="int">
        delete from t_project_customer
                where project_id = #{projectId}
    </delete>

    <insert id="insertModuleCustomerLink" parameterType="java.util.Map">
        insert into t_module_customer (module_id, customer_id)
                values (#{moduleId}, #{customerId})
    </insert>

    <delete id="deleteModuleCustomerLink" parameterType="java.util.Map">
        delete from t_module_customer
                where module_id = #{moduleId} and customer_id = #{customerId}
    </delete>

    <delete id="deleteAllModuleCustomerLinkByModuleId" parameterType="int">
        delete from t_module_customer
                where module_id = #{moduleId}
    </delete>

    <insert id="insertTaskCustomerLink" parameterType="java.util.Map">
        insert into t_task_customer (task_id, customer_id)
                values (#{taskId}, #{customerId})
    </insert>

    <delete id="deleteTaskCustomerLink" parameterType="java.util.Map">
        delete from t_task_customer
                where task_id = #{taskId} and customer_id = #{customerId}
    </delete>

    <delete id="deleteAllTaskCustomerLinkByTaskId" parameterType="int">
        delete from t_task_customer
                where task_id = #{taskId}
    </delete>

    <!--&lt;!&ndash;成员 与 项目&ndash;&gt;-->

    <!--<select id="selectUserIdByProjectId" parameterType="int" resultMap="ProjectResultMap">-->

    <!--</select>-->

    <insert id="insertProjectManagerLink" parameterType="java.util.Map">
        insert into t_project_manager (project_id, manager_id)
                values (#{projectId}, #{managerId})
    </insert>

    <delete id="deleteProjectManagerLink" parameterType="java.util.Map">
        delete from t_project_manager
                where project_id = #{projectId} and manager_id = #{managerId}
    </delete>

    <insert id="insertProjectMemberLink" parameterType="java.util.Map">
        insert into t_project_member (project_id, member_id)
                values (#{projectId}, #{memberId})
    </insert>

    <delete id="deleteProjectMemberLink" parameterType="java.util.Map">
        delete from t_project_member
                where project_id = #{projectId} and member_id = #{memberId}
    </delete>

    <select id="isProjectManager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_project_manager
        where project_id = #{projectId} and manager_id = #{userId}
    </select>

    <select id="isProjectMember" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_project_member
        where project_id = #{projectId} and member_id = #{userId}
    </select>

    <delete id="deleteAllProjectMemberLinkByProjectId" parameterType="int">
        delete from t_project_member
                where project_id = #{projectId}
    </delete>

    <delete id="deleteAllProjectManagerLinkByProjectId" parameterType="int">
        delete from t_project_manager
                where project_id = #{projectId}
    </delete>

    <!--&lt;!&ndash;成员 与 模块&ndash;&gt;-->

    <insert id="insertModuleManagerLink" parameterType="java.util.Map">
        insert into t_module_manager (module_id, manager_id)
                values (#{moduleId}, #{managerId})
    </insert>

    <delete id="deleteModuleManagerLink" parameterType="java.util.Map">
        delete from t_module_manager
                where module_id = #{moduleId} and manager_id = #{managerId}
    </delete>

    <insert id="insertModuleMemberLink" parameterType="java.util.Map">
        insert into t_module_member (module_id, member_id)
                values (#{moduleId}, #{memberId})
    </insert>

    <delete id="deleteModuleMemberLink" parameterType="java.util.Map">
        delete from t_module_member
                where module_id = #{moduleId} and member_id = #{memberId}
    </delete>

    <select id="isModuleManager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_module_manager
        where module_id = #{moduleId} and manager_id = #{userId}
    </select>

    <select id="isModuleMember" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_module_member
        where module_id = #{moduleId} and member_id = #{userId}
    </select>

    <delete id="deleteAllModuleMemberLinkByModuleId" parameterType="int">
        delete from t_module_member
                where module_id = #{moduleId}
    </delete>

    <delete id="deleteAllModuleManagerLinkByModuleId" parameterType="int">
        delete from t_module_manager
                where module_id = #{moduleId}
    </delete>

    <!--&lt;!&ndash;成员 与 任务&ndash;&gt;-->

    <insert id="insertTaskManagerLink" parameterType="java.util.Map">
        insert into t_task_manager (task_id, manager_id)
                values (#{taskId}, #{managerId})
    </insert>

    <delete id="deleteTaskManagerLink" parameterType="java.util.Map">
        delete from t_task_manager
                where task_id = #{taskId} and manager_id = #{managerId}
    </delete>

    <insert id="insertTaskMemberLink" parameterType="java.util.Map">
        insert into t_task_member (task_id, member_id)
                values (#{taskId}, #{memberId})
    </insert>

    <delete id="deleteTaskMemberLink" parameterType="java.util.Map">
        delete from t_task_member
                where task_id = #{taskId} and member_id = #{memberId}
    </delete>

    <select id="isTaskManager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_task_manager
        where task_id = #{taskId} and manager_id = #{userId}
    </select>

    <select id="isTaskMember" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from t_task_member
        where task_id = #{taskId} and member_id = #{userId}
    </select>

    <delete id="deleteAllTaskMemberLinkByTaskId" parameterType="int">
        delete from t_task_member
        where task_id = #{taskId}
    </delete>

    <delete id="deleteAllTaskManagerLinkByTaskId" parameterType="int">
        delete from t_task_manager
        where task_id = #{taskId}
    </delete>

    <select id="selectProjectIdByModuleId" parameterType="int" resultType="int">
        select  m.project_id
        from t_module m
        where m.id = #{moduleId}
    </select>

    <select id="selectModuleIdByTaskId" parameterType="int" resultType="int">
        select  t.module_id
        from t_task t
        where t.id = #{taskId}
    </select>

    <select id="fuzzySelectTaskBaseInfoList" parameterType="java.util.Map" resultMap="TaskResultMap">
        select t.id, t.name as task_name, t.create_time as task_create_time
        from t_task t
        left join t_module m on m.id = t.module_id
        where m.id = #{moduleId} and t.name like "%"#{str}"%"
    </select>
</mapper>